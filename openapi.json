{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "CCCAMBOX Reseller API",
    "description": "I'm trying to write a description for the API"
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "description": "API Key",
        "name": "x-api-key",
        "in": "header"
      }
    },
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/v1/credits": {
      "get": {
        "summary": "Get Credits",
        "description": "Retrieve the current number of credits available to the authenticated entity.",
        "tags": ["Credits System"],
        "security": [{ "ApiKeyAuth": [] }],
        "responses": {
          "200": {
            "description": "Ok: Return authenticated entity's credits.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "credits": {
                      "type": "number",
                      "description": "Number of credits available",
                      "example": 1000
                    }
                  },
                  "required": ["credits"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines": {
      "post": {
        "summary": "Create Line",
        "description": "Create a regular line and deduct corresponding credits based on the chosen duration.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "string",
                    "enum": ["1", "3", "6", "12"],
                    "description": "The duration of the line in months. Valid values are '1', '3', '6', or '12'.",
                    "example": "12"
                  },
                  "username": {
                    "type": "string",
                    "minLength": 12,
                    "maxLength": 30,
                    "description": "The username of the line. Must be RFC 3986 compliant. If not provided, a random username will be generated."
                  },
                  "password": {
                    "type": "string",
                    "minLength": 14,
                    "maxLength": 30,
                    "description": "The password of the line. Must be RFC 3986 compliant. If not provided, a random password will be generated."
                  },
                  "label": {
                    "type": "string",
                    "maxLength": 30,
                    "description": "The label of the line.",
                    "example": "My TV Line"
                  },
                  "connections": {
                    "type": "number",
                    "default": 1,
                    "description": "The number of simultaneous connections allowed for the line. Should be an integer between 1 and 6.",
                    "example": 1,
                    "minimum": 1,
                    "maximum": 6
                  },
                  "macaddress": {
                    "type": "string",
                    "description": "The MAC address to assign to the line.",
                    "example": "67:21:4C:24:76:97"
                  },
                  "parental_code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "description": "The parental code of the MAG access. Should be 4 digits.",
                    "example": "0000"
                  },
                  "bouquets": {
                    "type": "array",
                    "items": { "type": "number" },
                    "description": "The IDs of the bouquets to link on creation of the line.",
                    "example": [1, 2, 3]
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies whether the created line should be active or not."
                  }
                },
                "required": ["duration"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "OK: Returns the created line.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "line": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "hostname": { "type": "string", "nullable": true },
                        "username": { "type": "string" },
                        "password": { "type": "string" },
                        "label": { "type": "string" },
                        "enabled": { "type": "boolean" },
                        "connections": { "type": "number" },
                        "macaddress": { "type": "string", "nullable": true },
                        "parental_code": { "type": "string", "nullable": true },
                        "is_trial": { "type": "boolean" },
                        "exp_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Date of expiration of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "start_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "created_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Initial creation date of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        }
                      },
                      "required": [
                        "id",
                        "hostname",
                        "username",
                        "password",
                        "label",
                        "enabled",
                        "connections",
                        "macaddress",
                        "parental_code",
                        "is_trial",
                        "exp_date",
                        "start_date",
                        "created_at"
                      ]
                    },
                    "deducedCredits": { "type": "number", "example": 25 },
                    "newBalance": { "type": "number", "example": 4975 }
                  },
                  "required": ["line", "deducedCredits", "newBalance"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "402": {
            "description": "Balance error: Your balance is insufficient to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["insufficient_balance"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Insufficient balance to perform this action."
                    },
                    "balance": {
                      "type": "number",
                      "description": "Member actual balance",
                      "example": 500
                    },
                    "minBalance": {
                      "type": "number",
                      "description": "The minimum balance required to perform the action",
                      "example": 600
                    }
                  },
                  "required": ["code", "message", "balance"]
                }
              }
            }
          },
          "409": {
            "description": "A line with this mac address or this username already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "username_already_exist",
                        "macaddress_already_exist"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Username already exists."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Line Info",
        "description": "Allows to fetch all details associated with a specific line.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "The ID of the line. Either the ID or the username or the MAC address is required to run this request."
            },
            "required": false,
            "name": "id",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "The username of the line."
            },
            "required": false,
            "name": "username",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "MAC address of the line."
            },
            "required": false,
            "name": "macaddress",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok: Return all details of the specified line",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "hostname": { "type": "string", "nullable": true },
                    "username": { "type": "string" },
                    "password": { "type": "string" },
                    "label": { "type": "string" },
                    "enabled": { "type": "boolean" },
                    "connections": { "type": "number" },
                    "macaddress": { "type": "string", "nullable": true },
                    "parental_code": { "type": "string", "nullable": true },
                    "is_trial": { "type": "boolean" },
                    "exp_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Date of expiration of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "start_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "created_at": {
                      "type": "string",
                      "nullable": true,
                      "description": "Initial creation date of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    }
                  },
                  "required": [
                    "id",
                    "hostname",
                    "username",
                    "password",
                    "label",
                    "enabled",
                    "connections",
                    "macaddress",
                    "parental_code",
                    "is_trial",
                    "exp_date",
                    "start_date",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Line",
        "description": "Update line's info.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the line. Either the ID or the username is required to run this request."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the line."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "new_username": {
                        "anyOf": [{ "type": "string" }, { "type": "boolean" }],
                        "description": "The new username of the line. Must be RFC 3986 compliant. If the value is true, a random username will be generated.",
                        "minLength": 12,
                        "maxLength": 30
                      },
                      "password": {
                        "anyOf": [{ "type": "string" }, { "type": "boolean" }],
                        "description": "The new password of the line. Must be RFC 3986 compliant. If the value is true, a random password will be generated.",
                        "minLength": 14,
                        "maxLength": 30
                      },
                      "label": {
                        "type": "string",
                        "maxLength": 30,
                        "description": "The new label of the line.",
                        "example": "My TV Line"
                      },
                      "new_macaddress": {
                        "anyOf": [{ "type": "string" }, { "type": "boolean" }],
                        "description": "The new MAC address to assign to the line. To remove the assigned macaddress, set false",
                        "example": "67:21:4C:24:76:97"
                      },
                      "parental_code": {
                        "anyOf": [{ "type": "string" }, { "type": "boolean" }],
                        "description": "The new parental code of the MAG access. Should be 4 digits. Set false to remove parental code",
                        "example": "0000",
                        "maxLength": 4,
                        "minLength": 4
                      },
                      "bouquets": {
                        "anyOf": [
                          { "type": "array", "items": { "type": "number" } },
                          { "type": "boolean" }
                        ],
                        "description": "The new IDs of the bouquets to link on creation of the line. To remove bouquets, set empty array or false",
                        "example": [1, 2, 3]
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Specifies whether the line should be active or not."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the line. Either the ID or the username or the MAC address is required to run this request."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the line."
                      },
                      "macaddress": {
                        "type": "string",
                        "description": "MAC address of the line."
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Line updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "hostname": { "type": "string", "nullable": true },
                    "username": { "type": "string" },
                    "password": { "type": "string" },
                    "label": { "type": "string" },
                    "enabled": { "type": "boolean" },
                    "connections": { "type": "number" },
                    "macaddress": { "type": "string", "nullable": true },
                    "parental_code": { "type": "string", "nullable": true },
                    "is_trial": { "type": "boolean" },
                    "exp_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Date of expiration of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "start_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "created_at": {
                      "type": "string",
                      "nullable": true,
                      "description": "Initial creation date of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    }
                  },
                  "required": [
                    "id",
                    "hostname",
                    "username",
                    "password",
                    "label",
                    "enabled",
                    "connections",
                    "macaddress",
                    "parental_code",
                    "is_trial",
                    "exp_date",
                    "start_date",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "409": {
            "description": "A line with this mac address or this username already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "username_already_exist",
                        "macaddress_already_exist"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Username already exists."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Remove Line",
        "description": "Permanently delete a line from the system.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the line. Either the ID or the username or the MAC address is required to run this request."
                  },
                  "username": {
                    "type": "string",
                    "description": "The username of the line."
                  },
                  "macaddress": {
                    "type": "string",
                    "description": "MAC address of the line."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Line deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "success": { "type": "boolean" } },
                  "required": ["success"],
                  "example": { "success": true }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/trial": {
      "post": {
        "summary": "Create Trial Line",
        "description": "Create a trial line but does not deduct any credits.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "string",
                    "enum": ["12", "24", "48"],
                    "description": "The duration of the line in hours. Valid values are '12', '24' or '48'.",
                    "example": "48"
                  },
                  "username": {
                    "type": "string",
                    "minLength": 12,
                    "maxLength": 30,
                    "description": "The username of the line. Must be RFC 3986 compliant. If not provided, a random username will be generated."
                  },
                  "password": {
                    "type": "string",
                    "minLength": 14,
                    "maxLength": 30,
                    "description": "The password of the line. Must be RFC 3986 compliant. If not provided, a random password will be generated."
                  },
                  "label": {
                    "type": "string",
                    "maxLength": 30,
                    "description": "The label of the line.",
                    "example": "My TV Line"
                  },
                  "macaddress": {
                    "type": "string",
                    "description": "The MAC address to assign to the line.",
                    "example": "67:21:4C:24:76:97"
                  },
                  "parental_code": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 4,
                    "description": "The parental code of the MAG access. Should be 4 digits.",
                    "example": "0000"
                  },
                  "bouquets": {
                    "type": "array",
                    "items": { "type": "number" },
                    "description": "The IDs of the bouquets to link on creation of the line.",
                    "example": [1, 2, 3]
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies whether the created line should be active or not."
                  }
                },
                "required": ["duration"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok: Return created line",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "line": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "hostname": { "type": "string", "nullable": true },
                        "username": { "type": "string" },
                        "password": { "type": "string" },
                        "label": { "type": "string" },
                        "enabled": { "type": "boolean" },
                        "connections": { "type": "number" },
                        "macaddress": { "type": "string", "nullable": true },
                        "parental_code": { "type": "string", "nullable": true },
                        "is_trial": { "type": "boolean" },
                        "exp_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Date of expiration of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "start_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "created_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Initial creation date of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        }
                      },
                      "required": [
                        "id",
                        "hostname",
                        "username",
                        "password",
                        "label",
                        "enabled",
                        "connections",
                        "macaddress",
                        "parental_code",
                        "is_trial",
                        "exp_date",
                        "start_date",
                        "created_at"
                      ]
                    },
                    "deducedCredits": { "type": "number", "example": 0 },
                    "newBalance": { "type": "number", "example": 5000 }
                  },
                  "required": ["line", "deducedCredits", "newBalance"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "402": {
            "description": "Balance error: Your balance is insufficient to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["insufficient_balance"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Insufficient balance to perform this action."
                    },
                    "balance": {
                      "type": "number",
                      "description": "Member actual balance",
                      "example": 500
                    },
                    "minBalance": {
                      "type": "number",
                      "description": "The minimum balance required to perform the action",
                      "example": 600
                    }
                  },
                  "required": ["code", "message", "balance"]
                }
              }
            }
          },
          "409": {
            "description": "A line with this mac address or this username already exist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": [
                        "username_already_exist",
                        "macaddress_already_exist"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "example": "Username already exists."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/all": {
      "get": {
        "summary": "Get Active Lines",
        "description": "Fetch a list of all currently active lines.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "default": "0",
              "description": "The offset for the returned lines. Should be a non-negative integer.",
              "minimum": 0
            },
            "required": false,
            "name": "offset",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "default": "20",
              "description": "The number of lines to return. Should be an integer between 1 and 100.",
              "minimum": 1,
              "maximum": 100
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["all", "active", "suspended"],
              "default": "all",
              "description": "Status of the returned lines. Possible values: 'all', 'active', 'suspended'."
            },
            "required": false,
            "name": "status",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["all", "premium", "trial"],
              "default": "all",
              "description": "Type of the line to return. Possible values: 'all', 'premium', 'trial'."
            },
            "required": false,
            "name": "type",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["id", "username", "enabled", "exp_date"],
              "default": "id",
              "description": "Field to sort lines by. Possible values: 'id', 'username', 'enabled', 'exp_date'."
            },
            "required": false,
            "name": "orderBy",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": ["asc", "desc"],
              "default": "asc",
              "description": "Type of sort. Possible values: 'asc', 'desc'."
            },
            "required": false,
            "name": "orderType",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of active lines.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalHits": {
                      "type": "number",
                      "description": "The total number of lines available. (Helpfull for pagination)"
                    },
                    "totalReturns": {
                      "type": "number",
                      "description": "The number of lines returned in the current response."
                    },
                    "lines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "username": { "type": "string" },
                          "password": { "type": "string" },
                          "enabled": { "type": "boolean" },
                          "label": { "type": "string" },
                          "macaddress": { "type": "string", "nullable": true },
                          "parental_code": {
                            "type": "string",
                            "nullable": true
                          },
                          "connections": { "type": "number" },
                          "is_trial": {
                            "type": "boolean",
                            "description": "Indicates whether the line is a trial. If the trial line is extended to a premium line, this field is set to false.",
                            "example": false
                          },
                          "exp_date": {
                            "type": "string",
                            "nullable": true,
                            "description": "Date of expiration of the line.",
                            "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                          },
                          "start_date": {
                            "type": "string",
                            "nullable": true,
                            "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                            "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                          },
                          "created_at": {
                            "type": "string",
                            "nullable": true,
                            "description": "Initial creation date of the line.",
                            "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                          }
                        },
                        "required": [
                          "id",
                          "username",
                          "password",
                          "enabled",
                          "label",
                          "macaddress",
                          "parental_code",
                          "connections",
                          "is_trial",
                          "exp_date",
                          "start_date",
                          "created_at"
                        ]
                      }
                    }
                  },
                  "required": ["totalHits", "totalReturns", "lines"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/suspend": {
      "put": {
        "summary": "Suspend Line",
        "description": "Temporarily disable access for a line.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the line. Either the ID or the username is required to run this request."
                  },
                  "username": {
                    "type": "string",
                    "description": "The username of the line."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Line suspended",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "hostname": { "type": "string", "nullable": true },
                    "username": { "type": "string" },
                    "password": { "type": "string" },
                    "label": { "type": "string" },
                    "enabled": { "type": "boolean" },
                    "connections": { "type": "number" },
                    "macaddress": { "type": "string", "nullable": true },
                    "parental_code": { "type": "string", "nullable": true },
                    "is_trial": { "type": "boolean" },
                    "exp_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Date of expiration of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "start_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "created_at": {
                      "type": "string",
                      "nullable": true,
                      "description": "Initial creation date of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    }
                  },
                  "required": [
                    "id",
                    "hostname",
                    "username",
                    "password",
                    "label",
                    "enabled",
                    "connections",
                    "macaddress",
                    "parental_code",
                    "is_trial",
                    "exp_date",
                    "start_date",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/unsuspend": {
      "put": {
        "summary": "Unsuspend Line",
        "description": "Unsuspend access for a line.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The ID of the line. Either the ID or the username is required to run this request."
                  },
                  "username": {
                    "type": "string",
                    "description": "The username of the line."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Line unsuspended",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string" },
                    "hostname": { "type": "string", "nullable": true },
                    "username": { "type": "string" },
                    "password": { "type": "string" },
                    "label": { "type": "string" },
                    "enabled": { "type": "boolean" },
                    "connections": { "type": "number" },
                    "macaddress": { "type": "string", "nullable": true },
                    "parental_code": { "type": "string", "nullable": true },
                    "is_trial": { "type": "boolean" },
                    "exp_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Date of expiration of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "start_date": {
                      "type": "string",
                      "nullable": true,
                      "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    },
                    "created_at": {
                      "type": "string",
                      "nullable": true,
                      "description": "Initial creation date of the line.",
                      "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                    }
                  },
                  "required": [
                    "id",
                    "hostname",
                    "username",
                    "password",
                    "label",
                    "enabled",
                    "connections",
                    "macaddress",
                    "parental_code",
                    "is_trial",
                    "exp_date",
                    "start_date",
                    "created_at"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/upgrade": {
      "put": {
        "summary": "Upgrade Line",
        "description": "Add or remove extra connections",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the line. Either the ID or the username is required to run this request."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the line."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "new_connections": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 6,
                        "description": "The number of simultaneous connections allowed for the line. Should be an integer between 1 and 6.",
                        "example": 2
                      }
                    },
                    "required": ["new_connections"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Line edited",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "line": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "hostname": { "type": "string", "nullable": true },
                        "username": { "type": "string" },
                        "password": { "type": "string" },
                        "label": { "type": "string" },
                        "enabled": { "type": "boolean" },
                        "connections": { "type": "number" },
                        "macaddress": { "type": "string", "nullable": true },
                        "parental_code": { "type": "string", "nullable": true },
                        "is_trial": { "type": "boolean" },
                        "exp_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Date of expiration of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "start_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "created_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Initial creation date of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        }
                      },
                      "required": [
                        "id",
                        "hostname",
                        "username",
                        "password",
                        "label",
                        "enabled",
                        "connections",
                        "macaddress",
                        "parental_code",
                        "is_trial",
                        "exp_date",
                        "start_date",
                        "created_at"
                      ]
                    },
                    "deducedCredits": { "type": "number", "example": 25 },
                    "newBalance": { "type": "number", "example": 4975 }
                  },
                  "required": ["line", "deducedCredits", "newBalance"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "402": {
            "description": "Balance error: Your balance is insufficient to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["insufficient_balance"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Insufficient balance to perform this action."
                    },
                    "balance": {
                      "type": "number",
                      "description": "Member actual balance",
                      "example": 500
                    },
                    "minBalance": {
                      "type": "number",
                      "description": "The minimum balance required to perform the action",
                      "example": 600
                    }
                  },
                  "required": ["code", "message", "balance"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/extend": {
      "put": {
        "summary": "Extend Line",
        "description": "Extend Line expiration date.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the line. Either the ID or the username is required to run this request."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the line."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "duration": {
                        "type": "string",
                        "enum": ["1", "3", "6", "12"],
                        "description": "The duration of the line in months. Valid values are '1', '3', '6', or '12'.",
                        "example": "12"
                      }
                    },
                    "required": ["duration"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Line extended",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "line": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "hostname": { "type": "string", "nullable": true },
                        "username": { "type": "string" },
                        "password": { "type": "string" },
                        "label": { "type": "string" },
                        "enabled": { "type": "boolean" },
                        "connections": { "type": "number" },
                        "macaddress": { "type": "string", "nullable": true },
                        "parental_code": { "type": "string", "nullable": true },
                        "is_trial": { "type": "boolean" },
                        "exp_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Date of expiration of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "start_date": {
                          "type": "string",
                          "nullable": true,
                          "description": "Starting date of the line (Creation date or Extension date if the line has been extended).",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        },
                        "created_at": {
                          "type": "string",
                          "nullable": true,
                          "description": "Initial creation date of the line.",
                          "example": "Tue Dec 03 2024 18:44:34 GMT+0100 (GMT+01:00)"
                        }
                      },
                      "required": [
                        "id",
                        "hostname",
                        "username",
                        "password",
                        "label",
                        "enabled",
                        "connections",
                        "macaddress",
                        "parental_code",
                        "is_trial",
                        "exp_date",
                        "start_date",
                        "created_at"
                      ]
                    },
                    "deducedCredits": { "type": "number", "example": 25 },
                    "newBalance": { "type": "number", "example": 4975 }
                  },
                  "required": ["line", "deducedCredits", "newBalance"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "402": {
            "description": "Balance error: Your balance is insufficient to perform this action.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["insufficient_balance"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Insufficient balance to perform this action."
                    },
                    "balance": {
                      "type": "number",
                      "description": "Member actual balance",
                      "example": 500
                    },
                    "minBalance": {
                      "type": "number",
                      "description": "The minimum balance required to perform the action",
                      "example": 600
                    }
                  },
                  "required": ["code", "message", "balance"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "406": {
            "description": "Duration or Action not Authorized: The duration you've selected is no more avaiable or the action you're trying to perform is not compatible with this line. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["unavailable_duration", "line_not_found"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Selected duration is not available."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/simulate/upgrade": {
      "put": {
        "summary": "Simulate Upgrade Cost",
        "description": "Return the cost of the upgrade of the line.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the line. Either the ID or the username is required to run this request."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the line."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "new_connections": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 6,
                        "description": "The number of simultaneous connections allowed for the line. Should be an integer between 1 and 6.",
                        "example": 2
                      }
                    },
                    "required": ["new_connections"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Return upgrade cost",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "cost": { "type": "number", "example": 25 } },
                  "required": ["cost"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/lines/simulate/extend": {
      "put": {
        "summary": "Simulate Extension Cost",
        "description": "Return the cost of extending the line for the specified duration.",
        "tags": ["Line Management"],
        "security": [{ "ApiKeyAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The ID of the line. Either the ID or the username is required to run this request."
                      },
                      "username": {
                        "type": "string",
                        "description": "The username of the line."
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "duration": {
                        "type": "string",
                        "enum": ["1", "3", "6", "12"],
                        "description": "The duration of the line in months. Valid values are '1', '3', '6', or '12'.",
                        "example": "12"
                      }
                    },
                    "required": ["duration"]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok: Return extension cost",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "cost": { "type": "number", "example": 25 } },
                  "required": ["cost"]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Errors in supplied parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["request_errors"] },
                    "message": {
                      "type": "string",
                      "example": "Request error occurred."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string" },
                              "message": { "type": "string" },
                              "path": {
                                "type": "array",
                                "items": { "type": "string" }
                              }
                            },
                            "required": ["code", "message", "path"]
                          }
                        }
                      },
                      "required": ["errors"]
                    }
                  },
                  "required": ["code", "message", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "404": {
            "description": "Line Not Found: The line you're looking for could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["line_not_found"] },
                    "message": {
                      "type": "string",
                      "example": "Line not found."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "406": {
            "description": "Duration or Action not Authorized: The duration you've selected is no more avaiable or the action you're trying to perform is not compatible with this line. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "enum": ["unavailable_duration", "line_not_found"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Selected duration is not available."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    },
    "/v1/bouquets": {
      "get": {
        "summary": "Get Available Bouquets",
        "description": "Get Available Bouquets details",
        "tags": ["Bouquets"],
        "security": [{ "ApiKeyAuth": [] }],
        "responses": {
          "200": {
            "description": "Ok: Return available bouquets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "number" },
                          "label": { "type": "string" }
                        },
                        "required": ["id", "label"]
                      }
                    },
                    "movies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "number" },
                          "label": { "type": "string" }
                        },
                        "required": ["id", "label"]
                      }
                    }
                  },
                  "required": ["channels", "movies"]
                }
              }
            }
          },
          "401": {
            "description": "Auth Error: Not authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["not_authorized"] },
                    "message": {
                      "type": "string",
                      "example": "Not authorized to perform this action."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "429": {
            "description": "Rate limit error: too many requests.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["rate_limit"] },
                    "message": {
                      "type": "string",
                      "example": "Rate limit exceeded."
                    }
                  },
                  "required": ["code", "message"]
                }
              }
            }
          },
          "500": {
            "description": "Server Error: handler died.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": { "type": "string", "enum": ["server_error"] },
                    "message": {
                      "type": "string",
                      "example": "Internal server error occurred."
                    },
                    "requestId": { "type": "string" }
                  },
                  "required": ["code", "message", "requestId"]
                }
              }
            }
          }
        }
      }
    }
  }
}
